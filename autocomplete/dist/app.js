/*! For license information please see app.js.LICENSE.txt */
!function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module.default}:function getModuleExports(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=0)}({"./github/react-ion/autocomplete/src/scripts/components/Autocomplete.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\nvar Autocomplete = /*#__PURE__*/function (_React$Component) {\n  _inherits(Autocomplete, _React$Component);\n\n  var _super = _createSuper(Autocomplete);\n\n  /*\n  If an array of objects is passed in for data, then a main key is required.\n  PROPS:\n      parent          : OPTIONAL - parent object that contains other components.\n      arrData         : REQUIRED - And array of strings or objects. \n      mainKey         : OPTIONAL - The key in an array item to match. If not included, all keys will be checked and the first one will be displayed.\n      minimum         : OPTIONAL - Defaults to 3. Number of characters in the input before a search is done.\n      width           : OPTIONAL - If included, will add an inline style to the input\'s container.\n      placeholder     : OPTIONAL - Placeholder text for the input.\n      inputClasses    : OPTIONAL - Any classes you want on the input. Bootstrap classes, for example.\n      isDisabled      : OPTIONAL - If true, the input will be disabled.\n      onSelect        : OPTIONAL - function that fires when a result is selected.\n      highlightColor  : OPTIONAL - The color of matched words in results.\n   ReactDOM.render(\n      <RC.Autocomplete \n          prop={value} \n      />, document.getElementById(\'my-element\')\n  );\n  */\n  function Autocomplete(props) {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: \'\',\n      minimum: _this.props.minimum || 3,\n      width: _this.props.width || \'200px\',\n      placeholder: _this.props.placeholder || "Type something...",\n      matches: [],\n      inputClasses: _this.props.inputClasses ? \' \' + _this.props.inputClasses : \'\',\n      highlightColor: _this.props.highlightColor || \'#FFFF00\',\n      onSelect: _this.props.onSelect || null,\n      isDisabled: _this.props.isDisabled === false ? false : true // undefined means true\n\n    };\n    _this._handleChange = _this._handleChange.bind(_assertThisInitialized(_this));\n    _this._getMatches = _this._getMatches.bind(_assertThisInitialized(_this));\n    _this._getMatchMarkup = _this._getMatchMarkup.bind(_assertThisInitialized(_this));\n    _this._onSelect = _this._onSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: "_onSelect",\n    value: function _onSelect(evt) {\n      console.log("onSelect()", evt);\n\n      if (this.props.onSelect) {\n        var _this$props;\n\n        console.log("There\'s a prop", evt);\n\n        (_this$props = this.props).onSelect.apply(_this$props, arguments);\n      }\n    }\n  }, {\n    key: "_handleChange",\n    value: function _handleChange(evt) {\n      var minimum = this.state.minimum;\n      var objNew = {\n        value: evt.target.value\n      };\n\n      if (evt.target.value && evt.target.value.length >= minimum) {\n        objNew.matches = this._getMatches(evt.target.value);\n      } else {\n        objNew.matches = [];\n      }\n\n      this.setState(objNew);\n    }\n  }, {\n    key: "_getMatches",\n    value: function _getMatches(str) {\n      var value = str.toLowerCase(); // Not case sensitive.\n\n      var arrData = this.props.arrData,\n          mainKey = this.props.mainKey,\n          arrMatches = [];\n      /*\n      If there\'s no main key, then all keys will be checked.\n      */\n\n      arrData.forEach(function (item) {\n        if (mainKey) {\n          if (item[mainKey] && item[mainKey].toLowerCase().includes(value)) {\n            arrMatches.push(item);\n          }\n        } else {\n          /*\n          There\'s no main key, so we check all the keys.\n          */\n          if (Array.isArray(item[key])) {\n            /*\n            Check the array. This is for something like "tags" where there \n            would be an array of values that need to be checked. A match anywhere \n            will pass. Gonna write this bit later.\n            */\n          } else {\n            if (item[key] && item[key].toLowerCase().includes(value)) {\n              arrMatches.push(item);\n            }\n          }\n        }\n      });\n      return arrMatches;\n    }\n  }, {\n    key: "_getMatchMarkup",\n    value: function _getMatchMarkup() {\n      var _this2 = this;\n\n      var markup = null;\n      var value = this.state.value;\n\n      if (this.state.matches && this.state.matches.length) {\n        var regex = new RegExp(value, \'ig\');\n        var matches = this.state.matches.map(function (match, index) {\n          /*\n          ReactJS doesn\'t like to inject HTML directly, so we\'re going to make \n          an array of spans out of each match. This will allow us to highlight \n          the part of the match string that actually matched.\n          */\n          // Wrap the search string with triple pipes in the string then split it.\n          var strTemp = match[_this2.props.mainKey].replaceAll(regex, function (item) {\n            return \'|||\' + item + \'|||\';\n          });\n\n          var arrTemp = strTemp.split(\'|||\');\n          /*\n          Could be an empty string at lead or tail. Ignore those. Wrap everything in \n          a span, with the matching parts highlighted with a class.\n          */\n\n          var matchWithSpans = arrTemp.map(function (str, index) {\n            if (str.length) {\n              var strClass = str.toLowerCase() === value.toLowerCase() ? \'rc-ac-match hl\' : \'rc-ac-match reg\';\n              return /*#__PURE__*/React.createElement("span", {\n                className: strClass,\n                key: index\n              }, str);\n            }\n          });\n          return /*#__PURE__*/React.createElement("li", {\n            className: "rc-ac-match",\n            key: index,\n            onClick: _this2._onSelect\n          }, matchWithSpans);\n        });\n\n        if (matches.length) {\n          markup = /*#__PURE__*/React.createElement("div", {\n            className: "rc-ac-matchgroup"\n          }, /*#__PURE__*/React.createElement("ul", null, matches));\n        }\n      }\n\n      return markup;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      // TEMP STUFF =============================\n      var state = this.state;\n\n      window.getState = function () {\n        return state;\n      }; // ========================================\n\n\n      var markup = null,\n          inputClasses = \'rc-ac-input\' + this.state.inputClasses,\n          matches = this._getMatchMarkup();\n\n      return /*#__PURE__*/React.createElement("span", {\n        className: "rc-ac"\n      }, /*#__PURE__*/React.createElement("input", {\n        type: "text",\n        className: inputClasses,\n        value: this.state.value,\n        onChange: this._handleChange,\n        onKeyDown: this._handleKeyDown,\n        placeholder: this.state.placeholder,\n        "aria-label": this.state.placeholder\n      }), matches);\n    }\n  }]);\n\n  return Autocomplete;\n}(React.Component);\n\n/* harmony default export */ __webpack_exports__["default"] = (Autocomplete);\n\n//# sourceURL=webpack:///./github/react-ion/autocomplete/src/scripts/components/Autocomplete.js?')},"./github/react-ion/autocomplete/src/scripts/index.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_Autocomplete__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Autocomplete */ \"./github/react-ion/autocomplete/src/scripts/components/Autocomplete.js\");\n\nvar RC = {\n  Autocomplete: _components_Autocomplete__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n};\nvar APP = {\n  eventTasks: {\n    click: [],\n    keyup: []\n  },\n  init: function init() {\n    var _this = this;\n\n    //this.addListeners();\n    var propFunc = function propFunc(evt) {\n      console.log('I was passed in!');\n    };\n\n    this.getData().then(function (data) {\n      _this.data = _this.transformData(data);\n      console.log('APP init done', _this);\n      ReactDOM.render( /*#__PURE__*/React.createElement(RC.Autocomplete, {\n        parent: RC,\n        arrData: _this.data,\n        mainKey: \"label\",\n        minimum: \"3\",\n        onSelect: propFunc\n      }), document.getElementById('app'));\n    });\n  },\n  transformData: function transformData(data) {\n    return data;\n  },\n  addListeners: function addListeners() {\n    var _this2 = this;\n\n    $('body').on({\n      click: function click(evt) {\n        _this2.eventTasks.click.forEach(function (task) {\n          task.apply(_this2, [evt]);\n        }); //if (evt.target.id === 'tmc-search-button') {\n        //\tthis.search.run();\n        //}\n\n      },\n      keyup: function keyup(evt) {\n        //if (evt.target.id === 'tmc-search-input' && evt.keyCode === 13) {\n        //\tthis.search.run();\n        //}\n        _this2.eventTasks.keyup.forEach(function (task) {\n          task.apply(_this2, [evt]);\n        });\n      }\n    });\n  },\n  getData: function getData() {\n    var path = '../data/subscriptions.json';\n    return fetch(path).then(function (response) {\n      return response.json();\n    });\n  }\n};\n$(document).ready(function () {\n  APP.init(); //console.log('APP', APP);\n});\n\n//# sourceURL=webpack:///./github/react-ion/autocomplete/src/scripts/index.js?")},"./github/react-ion/autocomplete/src/styles/styles.scss":function(module,exports,__webpack_require__){eval('var api = __webpack_require__(/*! ../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n            var content = __webpack_require__(/*! !../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--4-1!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./styles.scss */ "./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./github/react-ion/autocomplete/src/styles/styles.scss");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === \'string\') {\n              content = [[module.i, content, \'\']];\n            }\n\nvar options = {};\n\noptions.insert = "head";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack:///./github/react-ion/autocomplete/src/styles/styles.scss?')},"./node_modules/mini-css-extract-plugin/dist/loader.js?!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./github/react-ion/autocomplete/src/styles/styles.scss":function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./github/react-ion/autocomplete/src/styles/styles.scss?./node_modules/mini-css-extract-plugin/dist/loader.js??ref--4-1!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js")},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?")},0:function(module,exports,__webpack_require__){eval('__webpack_require__(/*! ./github/react-ion/autocomplete/src/scripts/index.js */"./github/react-ion/autocomplete/src/scripts/index.js");\nmodule.exports = __webpack_require__(/*! ./github/react-ion/autocomplete/src/styles/styles.scss */"./github/react-ion/autocomplete/src/styles/styles.scss");\n\n\n//# sourceURL=webpack:///multi_./github/react-ion/autocomplete/src/scripts/index.js_./github/react-ion/autocomplete/src/styles/styles.scss?')}});